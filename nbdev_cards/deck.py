# AUTOGENERATED! DO NOT EDIT! File to edit: ../01_deck.ipynb.

# %% auto 0
__all__ = ['Deck', 'draw']

# %% ../01_deck.ipynb 3
class Deck:
    "A deck of 52 `Cards` not including joker"
    def __init__(self): self.cards = [Card(s, r) for s in range(4) for r in range(1,14)]
    def __len__(self): return len(self.cards)
    def __str__(self): return ';'.join(map(str, self.cards))
    __repr__ = __str__
    def __contains__(self,card:Card): return card in self.cards
    def shuffle(self): random.shuffle(self.cards)

# %% ../01_deck.ipynb 8
@patch
def pop(self:Deck, 
        idx:int=-1  #index of the card in the `Deck` default to the last one
       ): return self.cards.pop(idx)

# %% ../01_deck.ipynb 13
@patch
def remove(
    self: Deck,
    card: Card):  # `Card` to be removed from the deck
    "Removes `Card` from the deck"
    return self.cards.remove(card)

# %% ../01_deck.ipynb 17
def draw(self,
        n:int=5,  #`n` is the number of `Cards` to draw, defualt=5 Poker samole
        replace:bool=True):  #Do you need to replce them, defaul=True
    d = Deck()
    d.shuffle()
    if replace: return [random.choice(d.cards) for _ in range(n)]
    else: return d.cards[:n]
